<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[说明]]></title>
      <url>/2017/08/03/%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<hr>
<h2 id="博客说明"><a href="#博客说明" class="headerlink" title="博客说明"></a>博客说明</h2><p>​    欢迎来到我的博客,我将在这里更新一下小的知识点,以及java方面的知识</p>
<h2 id="请关注我"><a href="#请关注我" class="headerlink" title="请关注我"></a>请关注我</h2><h3 id="GITHUB"><a href="#GITHUB" class="headerlink" title="GITHUB"></a>GITHUB</h3><p>​    <a href="https://github.com/maruilong" target="_blank" rel="external">马睿隆</a></p>
<h3 id="QQ"><a href="#QQ" class="headerlink" title="QQ"></a>QQ</h3><p>​    774328384</p>
<a id="more"></a>
<h2 id="最近的动态"><a href="#最近的动态" class="headerlink" title="最近的动态"></a>最近的动态</h2><p>​     最近在阅读 java编程思想这本书,同时我的阅读进度和笔记在<a href="https://github.com/maruilong" target="_blank" rel="external">GITHUB</a>上同步更新</p>
<h3 id="date-2017-07-06-14-48-56"><a href="#date-2017-07-06-14-48-56" class="headerlink" title="date :2017-07-06 14:48:56"></a>date :2017-07-06 14:48:56</h3><p>​    <a href="https://github.com/maruilong/think_in_java-string" target="_blank" rel="external">String对象</a></p>
<h3 id="date-2017-07-17-21-05-23"><a href="#date-2017-07-17-21-05-23" class="headerlink" title="date :2017-07-17 21:05:23"></a>date :2017-07-17 21:05:23</h3><p>​    <a href="https://github.com/maruilong/think_in_java-typeinfo" target="_blank" rel="external">类型信息</a></p>
<p>data:2017-08-03 23:17:00 完成类型信息阅读</p>
]]></content>
      
        <categories>
            
            <category> 说明 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[从输入域名到显示网页的整个过程]]></title>
      <url>/2017/07/21/%E4%BB%8E%E8%BE%93%E5%85%A5%E5%9F%9F%E5%90%8D%E5%88%B0%E6%98%BE%E7%A4%BA%E7%BD%91%E9%A1%B5%E7%9A%84%E6%95%B4%E4%B8%AA%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>作为一个软件开发者，你一定会对网络应用如何工作有一个完整的层次化的认知，同样这里也包括这些应用所用到的技术：像浏览器，HTTP，HTML，网络<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>，需求处理等等。</p>
<p>本文将更深入的研究当你输入一个网址的时候，后台到底发生了一件件什么样的事～</p>
<a id="more"></a>
<ol>
<li>首先嘛，你得在浏览器里输入要网址:</li>
</ol>
<p><img src="http://www.chinahtml.com/d/file//2010/07-12/image4.png" alt="img"></p>
<ol>
<li>浏览器查找域名的IP地址</li>
</ol>
<p><img src="http://www.chinahtml.com/d/file//2010/07-12/image13.png" alt="img"></p>
<p>导航的第一步是通过访问的域名找出其IP地址。DNS查找过程如下：</p>
<ul>
<li><p>浏览器缓存 – 浏览器会缓存DNS记录一段时间。 有趣的是，操作系统没有告诉浏览器储存DNS记录的时间，这样不同浏览器会储存个自固定的一个时间（2分钟到30分钟不等）。</p>
</li>
<li><p>系统缓存 – 如果在浏览器缓存里没有找到需要的记录，浏览器会做一个系统调用（windows里是gethostbyname）。这样便可获得系统缓存中的记录。</p>
</li>
<li><p>路由器缓存 – 接着，前面的查询请求发向路由器，它一般会有自己的DNS缓存。</p>
</li>
<li><p>ISP DNS 缓存 – 接下来要check的就是ISP缓存DNS的<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>。在这一般都能找到相应的缓存记录。</p>
</li>
<li><p>递归搜索 – 你的ISP的DNS<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>从跟域名<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>开始进行递归搜索，从.com顶级域名<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>到Facebook的域名<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>。一般DNS<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>的缓存中会 有.com域名<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>中的域名，所以到顶级<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>的匹配过程不是那么必要了。</p>
</li>
</ul>
<p>DNS递归查找如下图所示：</p>
<p><img src="http://www.itmian4.com/data/attachment/forum/201211/24/195301kyzq6h6mvpe7wkqt.png" alt="img"></p>
<p>DNS有一点令人担忧，这就是像wikipedia.org 或者 facebook.com这样的整个域名看上去只是对应一个单独的IP地址。还好，有几种方法可以消除这个瓶颈：</p>
<ul>
<li><p>循环 DNS 是DNS查找时返回多个IP时的解决方案。举例来说，Facebook.com实际上就对应了四个IP地址。</p>
</li>
<li><p>负载平衡器 是以一个特定IP地址进行侦听并将网络请求转发到集群<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>上的硬件设备。 一些大型的站点一般都会使用这种昂贵的高性能负载平衡器。</p>
</li>
<li><p>地理 DNS 根据用户所处的地理位置，通过把域名映射到多个不同的IP地址提高可扩展性。这样不同的<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>不能够更新同步状态，但映射静态内容的话非常好。</p>
</li>
<li><p>Anycast 是一个IP地址映射多个物理主机的路由技术。 美中不足，Anycast与TCP协议适应的不是很好，所以很少应用在那些方案中。</p>
</li>
</ul>
<p>大多数DNS<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>使用Anycast来获得高效低延迟的DNS查找。</p>
<ol>
<li>浏览器给<a href="http://www.iwanna.cn/tags/web/" target="_blank" rel="external">web</a><a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>发送一个HTTP请求</li>
</ol>
<p><img src="http://www.chinahtml.com/d/file//2010/07-12/image22.png" alt="img"></p>
<p>因为像Facebook主页这样的动态页面，打开后在浏览器缓存中很快甚至马上就会过期，毫无疑问他们不能从中读取。</p>
<p>所以，浏览器将把一下请求发送到Facebook所在的<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>：</p>
<p>GET <a href="HTTP://facebook.com/" target="_blank" rel="external">HTTP://facebook.com/</a> HTTP/1.1</p>
<p>Accept: application/x-ms-application, image/jpeg, application/xaml+xml, […]</p>
<p>User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; […]</p>
<p>Accept-Encoding: gzip, deflate</p>
<p>Connection: Keep-Alive</p>
<p>Host: facebook.com</p>
<p>Cookie: datr=1265876274-[…]; locale=en_US; lsd=WW[…]; c_user=2101[…]</p>
<p>GET 这个请求定义了要读取的URL： “<a href="HTTP://facebook.com/" target="_blank" rel="external">HTTP://facebook.com/</a>”。 浏览器自身定义 (User-Agent 头)， 和它希望接受什么类型的相应 (Accept and Accept-Encoding 头). Connection头要求<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>为了后边的请求不要关闭TCP连接。</p>
<p>请求中也包含浏览器存储的该域名的cookies。可能你已经知道，在不同页面请求当中，cookies是与跟踪一个<a href="http://www.chinahtml.com/" target="_blank" rel="external">网站</a>状态相匹配的键值。这样cookies会存储登录用户名，<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>分配的密码和一些用户设置等。Cookies会以文本文档形式存储在客户机里，每次请求时发送给<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>。</p>
<p>用来看原始HTTP请求及其相应的工具很多。作者比较喜欢使用fiddler，当然也有像FireBug这样其他的工具。这些软件在<a href="http://www.chinahtml.com/" target="_blank" rel="external">网站</a>优 化时会帮上很大忙。</p>
<p>除了获取请求，还有一种是发送请求，它常在提交表单用到。发送请求通过URL传递其参数(e.g.: <a href="HTTP://robozzle.com/puzzle.aspx?id=85" target="_blank" rel="external">HTTP://robozzle.com/puzzle.aspx?id=85</a>)。发送请求在请求正文头之后发送其参数。</p>
<p>像“<a href="HTTP://facebook.com/" target="_blank" rel="external">HTTP://facebook.com/</a>”中的斜杠是至关重要的。这种情况下，浏览器能安全的添加斜杠。而像“HTTP:</p>
<p>//example.com/folderOrFile”这样的地址，因为浏览器不清楚folderOrFile到底是文件夹还是文件，所以不能自动添加<br> 斜杠。这时，浏览器就不加斜杠直接访问地址，<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>会响应一个重定向，结果造成一次不必要的握手。</p>
<ol>
<li>facebook服务的永久重定向响应</li>
</ol>
<p><img src="http://www.chinahtml.com/d/file//2010/07-12/image8.png" alt="img"></p>
<p>图中所示为Facebook<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>发回给浏览器的响应：</p>
<p>HTTP/1.1 301 Moved Permanently</p>
<p>Cache-Control: private, no-store, no-cache, must-revalidate, post-check=0,</p>
<p>pre-check=0</p>
<p>Expires: Sat, 01 Jan 2000 00:00:00 GMT</p>
<p>Location: <a href="HTTP://www.facebook.com/" target="_blank" rel="external">HTTP://www.facebook.com/</a></p>
<p>P3P: CP=”DSP LAW”</p>
<p>Pragma: no-cache</p>
<p>Set-Cookie: made_write_conn=deleted; expires=Thu, 12-Feb-2009 05:09:50 GMT;</p>
<p>path=/; domain=.facebook.com; httponly</p>
<p>Content-Type: text/html; charset=utf-8</p>
<p>X-Cnection: close</p>
<p>Date: Fri, 12 Feb 2010 05:09:51 GMT</p>
<p>Content-Length: 0</p>
<p><a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>给浏览器响应一个301永久重定向响应，这样浏览器就会访问“<a href="HTTP://www.facebook.com/" target="_blank" rel="external">HTTP://www.facebook.com/</a>” 而非“<a href="HTTP://facebook.com/" target="_blank" rel="external">HTTP://facebook.com/</a>”。</p>
<p>为什么<a href="http://www.chinahtml.com/server" target="_blank" rel="external">服务器</a>一定要重定向而不是直接发会用户想看的网页内容呢？这个问题有好多有意思的答案。</p>
<p>其中一个原因跟搜索引擎排名有 关。你看，如果一个页面有两个地址，就像<a href="HTTP://www.igoro.com/" target="_blank" rel="external">HTTP://www.igoro.com/</a> 和<a href="HTTP://igoro.com/" target="_blank" rel="external">HTTP://igoro.com/</a>，搜索引擎会认为它们是两个<a href="http://www.chinahtml.com/" target="_blank" rel="external">网站</a>，结果造成每一个的搜索链接都减少从而降低排名。而搜索引擎知道301永久重定向是 什么意思，这样就会把访问带www的和不带www的地址归到同一个<a href="http://www.chinahtml.com/" target="_blank" rel="external">网站</a>排名下。</p>
<p>还有一个是用不同的地址会造成缓存友好性变差。当一个页面有好几个名字时，它可能会在缓存里出现好几次。</p>
<ol>
<li>浏览器跟踪重定向地址</li>
</ol>
<p><img src="http://www.chinahtml.com/d/file//2010/07-12/image23.png" alt="img"></p>
<p>现在，浏览器知道了 “<a href="HTTP://www.facebook.com/" target="_blank" rel="external">HTTP://www.facebook.com/</a>”才是要访问的正确地址，所以它会发送另一个获取请求：</p>
<p>GET <a href="HTTP://www.facebook.com/" target="_blank" rel="external">HTTP://www.facebook.com/</a> HTTP/1.1</p>
<p>Accept: application/x-ms-application, image/jpeg, application/xaml+xml, […]</p>
<p>Accept-Language: en-US</p>
<p>User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; […]</p>
<p>Accept-Encoding: gzip, deflate</p>
<p>Connection: Keep-Alive</p>
<p>Cookie: lsd=XW[…]; c_user=21[…]; x-referer=[…]</p>
<p>Host: <a href="http://www.facebook.com" target="_blank" rel="external">www.facebook.com</a></p>
<p>头信息以之前请求中的意义相同。</p>
<ol>
<li>服务器“处理”请求</li>
</ol>
<p>服务器接收到获取请求，然后处理并返回一个响应。</p>
<p>这表面上看起来是一个顺向的任务，但其实这中间发生了很多有意思的东西- 就像作者博客这样简单的网站，何况像facebook那样访问量大的网站呢！</p>
<ul>
<li>Web 服务器软件web服务器软件（像IIS和阿帕奇）接收到HTTP请求，然后确定执行什么请求处理来处理它。请求处理就 是一个能够读懂请求并且能生成HTML来进行响应的程序（像ASP.NET,PHP,RUBY…）。</li>
</ul>
<p>举 个最简单的例子，需求处理可以以映射网站地址结构的文件层次存储。像<a href="HTTP://example.com/folder1/page1.aspx" target="_blank" rel="external">HTTP://example.com/folder1/page1.aspx</a>这个地 址会映射/httpdocs/folder1/page1.aspx这个文件。web服务器软件可以设置成为地址人工的对应请求处理，这样 page1.aspx的发布地址就可以是<a href="HTTP://example.com/folder1/page1" target="_blank" rel="external">HTTP://example.com/folder1/page1</a>。* 请求处理请求处理阅读 请求及它的参数和cookies。它会读取也可能更新一些数据，并讲数据存储在服务器上。然后，需求处理会生成一个HTML响应。</p>
<p>所 有动态网站都面临一个有意思的难点<br>-如何存储数据。小网站一半都会有一个SQL数据库来存储数据，存储大量数据和/或访问量大的网站不得不找一些办法把数据库分配到多台机器上。解决方案有：sharding<br> （基于主键值讲数据表分散到多个数据库中），复制，利用弱语义一致性的简化数据库。</p>
<p>委托工作给批处理是一个廉价保持数据更新的技术。举例来讲，Fackbook得及时更新新闻feed，但数据支持下的“你可能认识的人”功能只需要每晚更新（作者猜测是这样的，改功能如何完善不得而知）。批处理作业更新会导致一些不太重要的数据陈旧，但能使数据更新耕作更快更简洁。7. 服务器发回一个HTML响应</p>
<p>图中为服务器生成并返回的响应：</p>
<p>HTTP/1.1 200 OKCache-Control: private, no-store, no-cache, must-revalidate, post-check=0,pre-check=0Expires: Sat, 01 Jan 2000 00:00:00 GMTP3P: CP=”DSP LAW”Pragma: no-cacheContent-Encoding: gzipContent-Type: text/html; charset=utf-8X-Cnection: closeTransfer-Encoding: chunkedDate: Fri, 12 Feb 2010 09:05:55 GMT</p>
<p>2b3Tn@[…]</p>
<p>整个响应大小为35kB，其中大部分在整理后以blob类型传输。</p>
<p>内容编码头告诉浏览器整个响应体用 gzip算法进行压缩。解压blob块后，你可以看到如下期望的HTML：</p>
<p>“<a href="HTTP://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" target="_blank" rel="external">HTTP://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd</a>”&gt;lang=”en” id=”facebook”&gt;</p>
<p>…</p>
<p>关于压缩，头信息说明了是否缓存这个页面，如果缓存的话如何去做，有什么cookies要去设置（前面这个响应里没有这点）和隐私信息等 等。</p>
<p>请注意报头中把Content-type设置为“text/html”。报头让浏览器将该响应内容以HTML形式呈现，而不是以文件形式下 载它。浏览器会根据报头信息决定如何解释该响应，不过同时也会考虑像URL扩展内容等其他因素。8. 浏览器开始显示HTML</p>
<p>在浏览器没有完整接受全部HTML文档时，它就已经开始显示这个页面了：</p>
<ol>
<li>浏览器发送获取嵌入在HTML中的对象</li>
</ol>
<p>在浏览器显示HTML时，它会注意到需要获取其他地址内容的标签。这时，浏览器会发送一个获取请求来重新获得这些文件。</p>
<p>下面是几个我们访问facebook.com时需要重获取的几个URL：</p>
<ul>
<li>图片</li>
</ul>
<p>HTTP://static.ak.fbcdn.net/rsrc.php/z12E0/hash/8q2anwu7.gif</p>
<p>HTTP://static.ak.fbcdn.net/rsrc.php/zBS5C/hash/7hwy7at6.gif</p>
<p>…* CSS 式样表</p>
<p>HTTP://static.ak.fbcdn.net/rsrc.php/z448Z/hash/2plh8s4n.css</p>
<p>HTTP://static.ak.fbcdn.net/rsrc.php/zANE1/hash/cvtutcee.css</p>
<p>…* JavaScript 文件</p>
<p>HTTP://static.ak.fbcdn.net/rsrc.php/zEMOA/hash/c8yzb6ub.js</p>
<p>HTTP://static.ak.fbcdn.net/rsrc.php/z6R9L/hash/cq2lgbs8.js</p>
<p>…</p>
<p>这些地址都要经历一个和HTML读取类似的过程。所以浏览器会在DNS中查找这些域名，发送请求，重定向等等…</p>
<p>但不像动态页面那样，静态文件会允许浏览器对其进行缓存。有的文件可能会不需要与服务器通讯，而从缓存中直接读取。服务器的响应中包含了静态文件保存的期限信息，所以浏览器知道要把它们缓存多长时间。还有，每个响应都可能包含像版本号一样工作的ETag头（被请求变量的实体值），如果浏览器观察到文件的版本<br> ETag信息已经存在，就马上停止这个文件的传输。</p>
<p>试着猜猜看“fbcdn.net”在地址中代表什么？聪明的答案是”Facebook内容分发网络”。Facebook利用内容分发网络 （CDN）分发像图片，CSS表和 JavaScript文件这些静态文件。所以，这些文件会在全球很多CDN的数据中心中留下备份。</p>
<p>静态内容往往代表站点的带宽大小，也能通过CDN轻松的复制。通常网站会使用第三方的CDN。例如，Facebook的静态文件由最大的 CDN提供商Akamai来托管。</p>
<p>举例来讲，当你试着ping static.ak.fbcdn.net的时候，可能会从某个akamai.net服务器上获得响应。有意思的是，当你同样再ping一次的时候，响应的 服务器可能就不一样，这说明幕后的负载平衡开始起作用了。10. 浏览器发送异步（AJAX）请求</p>
<p>在Web 2.0伟大精神的指引下，页面显示完成后客户端仍与服务器端保持着联系。</p>
<p>以<br>Facebook聊天功能为例，它会持续与服务器保持联系来及时更新你那些亮亮灰灰的好友状态。为了更新这些头像亮着的好友状态，在浏览器中执行的<br>JavaScript代码会给服务器发送异步请求。这个异步请求发送给特定的地址，它是一个按照程式构造的获取或发送请求。还是在Facebook这个例子中，客户端发送给<a href="HTTP://www.facebook.com/ajax/chat/buddy_list.php" target="_blank" rel="external">HTTP://www.facebook.com/ajax/chat/buddy_list.php</a>一个发布请求来获取你好友里哪个 在线的状态信息。</p>
<p>提起这个模式，就必须要讲讲”AJAX”– “异步JavaScript 和 XML”，虽然服务器为什么用XML格式来进行响应也没有个一清二白的原因。再举个例子吧，对于异步请求，Facebook会返回一些 JavaScript的代码片段。</p>
<p>除了其他，fiddler这个工具能够让你看到浏览器发送的异步请求。事实上，你不仅可以被动的做为这些请求的看客，还能主动出击修改和重 新发送它们。AJAX请求这么容易被蒙，可着实让那些计分的在线游戏开发者们郁闷的了。（当然，可别那样骗人家~）</p>
<p>Facebook聊天功能提供了关于AJAX一个有意思的问题案例：把数据从服务器端推送到客户端。因为HTTP是一个请求-响应协议，所 以聊天服务器不能把新消息发给客户。取而代之的是客户端不得不隔几秒就轮询下服务器端看自己有没有新消息。</p>
<p>这些情况发生时长轮询是个减轻服务器负载挺有趣的技术。如果当被轮询时服务器没有新消息，它就不理这个客户端。而当尚未超时的情况下收到了 该客户的新消息，服务器就会找到未完成的请求，把新消息做为响应返回给客户端。总结一下</p>
<p>希望看了本文，你能明白不同的网络模块是如何协同工作的</p>
<p>来源:<a href="http://www.itmian4.com/forum.php?mod=viewthread&amp;tid=1655&amp;fromuid=1931" target="_blank" rel="external">http://www.itmian4.com/forum.php?mod=viewthread&amp;tid=1655&amp;fromuid=1931</a></p>
]]></content>
      
        <categories>
            
            <category> 面试题 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> web </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[正则判断字符串]]></title>
      <url>/2017/07/21/%E6%AD%A3%E5%88%99%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      <content type="html"><![CDATA[<p><strong>由字符串”Tommy%^TANG23@126<em>me”,写一段正则表达式，验证是否符合整串只能包含大小写、数字和“</em> _ ”且长度不能超过15。</strong></p>
<p>代码</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.itmasir.regex;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.regex.Matcher;</div><div class="line"><span class="keyword">import</span> java.util.regex.Pattern;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegexDemo</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEXT = <span class="string">"Tommy%^TANG23@126_me"</span>;</div><div class="line">    <span class="comment">//private static final String TEST1 = "d1_";</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String REGEX = <span class="string">"(^\\w+)&#123;0,15&#125;"</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Pattern pattern = Pattern.compile(REGEX);</div><div class="line">        Matcher matcher = pattern.matcher(TEXT);</div><div class="line">        <span class="keyword">if</span> (matcher.matches()) &#123;</div><div class="line">            System.out.println(matcher.group());</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            System.out.println(<span class="string">"字符串:"</span> + TEXT + <span class="string">"不满足表达式:"</span> + REGEX);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 面试题 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 正则 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[文件操作]]></title>
      <url>/2017/07/21/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h2 id="1-在本地生成一个文件（文件内容任意）"><a href="#1-在本地生成一个文件（文件内容任意）" class="headerlink" title="1:在本地生成一个文件（文件内容任意）"></a>1:在本地生成一个文件（文件内容任意）</h2><h2 id="2-copy文件"><a href="#2-copy文件" class="headerlink" title="2:copy文件"></a>2:copy文件</h2><p>代码</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.itmasir.file;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.Closeable;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.FileInputStream;</div><div class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</div><div class="line"><span class="keyword">import</span> java.io.FileOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.nio.channels.FileChannel;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * </div><div class="line"> * <span class="doctag">@ClassName</span>: FileUtils</div><div class="line"> * <span class="doctag">@Description</span>: 文件工具类 可以直接继承 org.apache.commons.io.FileUtils</div><div class="line"> * <span class="doctag">@author</span> shinian</div><div class="line"> * <span class="doctag">@date</span> 2017年7月21日 下午2:31:18</div><div class="line"> * </div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUtils</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 一KB</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> ONE_KB = <span class="number">1024</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 一M</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> ONE_MB = ONE_KB * ONE_KB;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * copy文件的bufferSize</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> FILE_COPY_BUFFER_SIZE = ONE_MB * <span class="number">30</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * </div><div class="line">     * <span class="doctag">@Title</span>: createFile</div><div class="line">     * <span class="doctag">@Description</span>:创建文件</div><div class="line">     * <span class="doctag">@param</span> path</div><div class="line">     *            目录</div><div class="line">     * <span class="doctag">@param</span> fileName</div><div class="line">     *            文件名</div><div class="line">     * <span class="doctag">@return</span> File</div><div class="line">     * <span class="doctag">@throws</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title">createFile</span><span class="params">(String path, String fileName)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (path == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"目录不能为空!"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (fileName == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"文件名不能为空!"</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        File file = <span class="keyword">new</span> File(path, fileName);</div><div class="line">        <span class="keyword">if</span> (!file.getParentFile().exists()) &#123;</div><div class="line">            <span class="keyword">if</span> (!file.getParentFile().mkdir()) &#123;</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"文件夹创建失败"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (file.exists()) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"文件已经存在"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (file.createNewFile()) &#123;</div><div class="line">                <span class="keyword">return</span> file;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * </div><div class="line">     * <span class="doctag">@Title</span>: copyFile</div><div class="line">     * <span class="doctag">@Description</span>:</div><div class="line">     * <span class="doctag">@param</span> srcFile</div><div class="line">     *            源文件</div><div class="line">     * <span class="doctag">@param</span> destFile</div><div class="line">     *            目标文件</div><div class="line">     * <span class="doctag">@return</span> void</div><div class="line">     * <span class="doctag">@throws</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyFile</span><span class="params">(File srcFile, File destFile)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        <span class="keyword">if</span> (srcFile == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"源文件不能为空"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (destFile == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"目标文件不能为空"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (srcFile.exists() == <span class="keyword">false</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> FileNotFoundException(<span class="string">"源文件 '"</span> + srcFile + <span class="string">"' 不存在"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (srcFile.isDirectory()) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"源文件 '"</span> + srcFile + <span class="string">"' 是一个目录"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (srcFile.getCanonicalPath().equals(destFile.getCanonicalPath())) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"源文件 '"</span> + srcFile + <span class="string">"' 和目标文件 '"</span> + destFile</div><div class="line">                    + <span class="string">"' 是同一个目录"</span>);</div><div class="line">        &#125;</div><div class="line">        File parentFile = destFile.getParentFile();</div><div class="line">        <span class="keyword">if</span> (parentFile != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (!parentFile.mkdirs() &amp;&amp; !parentFile.isDirectory()) &#123;</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IOException(parentFile + <span class="string">"'目录不能创建"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (destFile.exists() &amp;&amp; destFile.canWrite() == <span class="keyword">false</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(destFile + <span class="string">"' 是只读的"</span>);</div><div class="line">        &#125;</div><div class="line">        doCopyFile(srcFile, destFile);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doCopyFile</span><span class="params">(File srcFile, File destFile)</span></span></div><div class="line">            <span class="keyword">throws</span> IOException &#123;</div><div class="line">        <span class="keyword">if</span> (destFile.exists() &amp;&amp; destFile.isDirectory()) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(destFile + <span class="string">"' 是一个目录"</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        FileInputStream fis = <span class="keyword">null</span>;</div><div class="line">        FileOutputStream fos = <span class="keyword">null</span>;</div><div class="line">        FileChannel input = <span class="keyword">null</span>;</div><div class="line">        FileChannel output = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            fis = <span class="keyword">new</span> FileInputStream(srcFile);</div><div class="line">            fos = <span class="keyword">new</span> FileOutputStream(destFile);</div><div class="line">            input = fis.getChannel();</div><div class="line">            output = fos.getChannel();</div><div class="line">            <span class="keyword">long</span> size = input.size();</div><div class="line">            <span class="keyword">long</span> pos = <span class="number">0</span>;</div><div class="line">            <span class="keyword">long</span> count = <span class="number">0</span>;</div><div class="line">            <span class="keyword">while</span> (pos &lt; size) &#123;</div><div class="line">                count = size - pos &gt; FILE_COPY_BUFFER_SIZE ? FILE_COPY_BUFFER_SIZE</div><div class="line">                        : size - pos;</div><div class="line">                pos += output.transferFrom(input, pos, count);</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            closeQuietly(output);</div><div class="line">            closeQuietly(fos);</div><div class="line">            closeQuietly(input);</div><div class="line">            closeQuietly(fis);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (srcFile.length() != destFile.length()) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"拷贝文件'"</span> + srcFile + <span class="string">"' 到 '"</span> + destFile</div><div class="line">                    + <span class="string">"'失败 "</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeQuietly</span><span class="params">(Closeable closeable)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (closeable != <span class="keyword">null</span>) &#123;</div><div class="line">                closeable.close();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException ioe) &#123;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">FileUtils</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>## </p>
]]></content>
      
        <categories>
            
            <category> 面试题 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> file </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[说说你了解的设计模式]]></title>
      <url>/2017/07/21/%E8%AF%B4%E8%AF%B4%E4%BD%A0%E4%BA%86%E8%A7%A3%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>请查看更多</p>
<a id="more"></a>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-21/30806354.jpg" alt=""></p>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-21/4044119.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 面试题 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[网络编程,客户端如何知道和服务端已断线]]></title>
      <url>/2017/07/21/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%A6%82%E4%BD%95%E7%9F%A5%E9%81%93%E5%92%8C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B7%B2%E6%96%AD%E7%BA%BF/</url>
      <content type="html"><![CDATA[<p><strong>告诉服务器,我还活着</strong></p>
<p>三体二中罗辑为了威慑三体世界,构建了摇篮系统,通过持续对太空发送信号来保持威慑,这其实也是客户端和服务端了</p>
<p>在客户端定期对服务端发送信息,如果服务端接受不到这个信息,那么说明客户端断线</p>
<a id="more"></a>
<p>简单解释就是：</p>
<p>短连接：建立连接，发送数据包，关闭连接</p>
<p>长连接：建立连接，发送数据包，发送心跳包，发送数据包，发送心跳包，发送心跳包。。。。。。</p>
<p>所以又频繁的数据收发的话，短连接会频繁创建TCP连接，而对于长连接，则始终用的是同一个TCP连接</p>
<p><strong>服务端</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.itmasir.socket;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.InputStream;</div><div class="line"><span class="keyword">import</span> java.io.OutputStream;</div><div class="line"><span class="keyword">import</span> java.net.ServerSocket;</div><div class="line"><span class="keyword">import</span> java.net.Socket;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketDemo</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PORT = <span class="number">1234</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BUFFER_SIZE = <span class="number">1024</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        ServerSocket ss = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            ss = <span class="keyword">new</span> ServerSocket(PORT);</div><div class="line">            Socket s = ss.accept();</div><div class="line">            System.out.println(<span class="string">"这是服务端，监听本机"</span> + PORT + <span class="string">"端口"</span>);</div><div class="line">            <span class="keyword">byte</span>[] recData = <span class="keyword">null</span>;</div><div class="line">            InputStream in = s.getInputStream();</div><div class="line">            OutputStream out = s.getOutputStream();</div><div class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">                recData = <span class="keyword">new</span> <span class="keyword">byte</span>[BUFFER_SIZE];</div><div class="line">                <span class="keyword">int</span> r = in.read(recData);</div><div class="line">                <span class="comment">// int r = in.read(recData);</span></div><div class="line">                <span class="keyword">if</span> (r &gt; -<span class="number">1</span>) &#123;</div><div class="line">                    String data = <span class="keyword">new</span> String(recData);</div><div class="line">                    <span class="keyword">if</span> (data.trim().equals(<span class="string">"over"</span>)) &#123;</div><div class="line">                        s.close();</div><div class="line">                    &#125;</div><div class="line">                    System.out.println(<span class="string">"读取到客户端发送的来数据："</span> + data);</div><div class="line">                    out.write(<span class="string">"这是服务端发给客户端的数据："</span>.getBytes());</div><div class="line">                    out.write(recData);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    System.out.println(<span class="string">"数据读取完毕！"</span>);</div><div class="line">                    s.close();</div><div class="line">                    System.exit(<span class="number">0</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"客户端已断线!"</span>);</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                ss.close();</div><div class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>客户端</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.itmasir.socket;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.OutputStream;</div><div class="line"><span class="keyword">import</span> java.net.Socket;</div><div class="line"><span class="keyword">import</span> java.net.UnknownHostException;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientSocketDemo</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String HOST = <span class="string">"127.0.0.1"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PORT = <span class="number">1234</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> UnknownHostException,</span></div><div class="line">            IOException &#123;</div><div class="line">        Socket client = <span class="keyword">new</span> Socket(HOST, PORT);</div><div class="line">        OutputStream out = client.getOutputStream();</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">                Thread.sleep(<span class="number">1000</span>);</div><div class="line">                System.out.println(<span class="string">"发送心跳数据包"</span>);</div><div class="line">                out.write(<span class="string">"发送心跳包!"</span>.getBytes());</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            out.close();</div><div class="line">            client.close();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>客户端</strong></p>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-21/76408146.jpg" alt=""></p>
<p><strong>服务端</strong></p>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-21/22696693.jpg" alt=""></p>
<p>以上服务端的网络程序只能和一个客户端程序连接，拒绝多个客户端的连接</p>
<p>服务端如果要想接收多个客户端连接，必须死循环去接收新的客户端的连接请求，一个完整的客户端服务端socket连接通过一个线程来维护</p>
<p><strong>服务端</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.itmasir.socket;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.InputStream;</div><div class="line"><span class="keyword">import</span> java.io.OutputStream;</div><div class="line"><span class="keyword">import</span> java.io.PrintWriter;</div><div class="line"><span class="keyword">import</span> java.net.Socket;</div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadServerSocket</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Socket server;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ThreadServerSocket</span><span class="params">(Socket socket)</span> </span>&#123;</div><div class="line">        server = socket;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            InputStream in = server.getInputStream();</div><div class="line">            OutputStream out = server.getOutputStream();</div><div class="line">            Scanner sc = <span class="keyword">new</span> Scanner(in);</div><div class="line">            PrintWriter pw = <span class="keyword">new</span> PrintWriter(out, <span class="keyword">true</span><span class="comment">/* 自动刷新 */</span>);</div><div class="line">            pw.println(<span class="string">"输入 BYE 退出"</span>);</div><div class="line">            <span class="keyword">while</span> (sc.hasNextLine()) &#123;</div><div class="line">                String line = sc.nextLine();</div><div class="line">                pw.println(<span class="string">"输出:"</span> + line);</div><div class="line">                <span class="keyword">if</span> (line.trim().equals(<span class="string">"BYE"</span>)) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            sc.close();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                server.close();</div><div class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">package</span> com.itmasir.socket;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.net.ServerSocket;</div><div class="line"><span class="keyword">import</span> java.net.Socket;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MulServerSocketDemo</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PORT = <span class="number">1234</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        <span class="keyword">int</span> counter = <span class="number">1</span>;</div><div class="line">        ServerSocket ss = <span class="keyword">new</span> ServerSocket(PORT);</div><div class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">            Socket s = ss.accept();</div><div class="line">            System.out.println(<span class="string">"第 "</span> + (counter++) + <span class="string">" 个连接"</span>);</div><div class="line">            Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadServerSocket(s));</div><div class="line">            t.start();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>测试</strong></p>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-21/1095890.jpg" alt=""></p>
<p><strong>客户端</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.itmasir.socket;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.OutputStream;</div><div class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</div><div class="line"><span class="keyword">import</span> java.net.Socket;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadClientSocket</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String HOST = <span class="string">"127.0.0.1"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PORT = <span class="number">1234</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Socket client;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ThreadClientSocket</span><span class="params">()</span> </span>&#123;</div><div class="line">        client = <span class="keyword">new</span> Socket();</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            client.connect(<span class="keyword">new</span> InetSocketAddress(HOST, PORT), <span class="number">500</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            <span class="comment">// TODO Auto-generated catch block</span></div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            OutputStream out = client.getOutputStream();</div><div class="line">            <span class="keyword">int</span> counter = <span class="number">0</span>;</div><div class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">                System.out.println(<span class="string">"Thread--&gt;"</span></div><div class="line">                        + Thread.currentThread().getName());</div><div class="line">                out.write(<span class="string">"Heart Beat !"</span>.getBytes());</div><div class="line">                System.out.println(client + <span class="string">"================"</span> + (counter++));</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    Thread.sleep(<span class="number">2000</span>);</div><div class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">package</span> com.itmasir.socket;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MulClientSocketDemo</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        <span class="keyword">int</span> counter = <span class="number">4</span>;</div><div class="line">        <span class="keyword">while</span> ((counter--) &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadClientSocket()).start();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>结果</strong></p>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-21/85236938.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 面试题 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 网络编程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[utf-8和unicode的区别]]></title>
      <url>/2017/07/21/utf-8%E5%92%8Cunicode%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<p>1.什么是Unicode。Unicode的基本目标是统一所有的编码，即它包含所有的字符集。这样只要一个系统支持Unicode，那么，就能处理这些字符集。一般Unicode有两个字节。现在的windows操作系统都是支持Unicode的。</p>
<p>UTF8 == Unicode Transformation Format – 8 bit  </p>
<p>2.什么是UTF8呢？UTF8是一种Unicode编码，即它的编码的字符集和Unicode是一致的。但编码的方式不一样。对于英文字符来讲，UTF8的编码和一般的一样，用到一个字节。但对于中文来讲，那么要用三个字节表示。</p>
<a id="more"></a>
<p>UTF8和Unicode的缺点是在处理查找、搜索等问题时，好像算法上比较复杂，效率不高.</p>
<p><strong>Unicode制订了横竖撇点捺,中国人用这些组合成了中文,日本人用这些组合成了日文</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.itmasir.unicode;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * </div><div class="line"> * <span class="doctag">@ClassName</span>: UnicodeDemo</div><div class="line"> * <span class="doctag">@Description</span>:</div><div class="line"> * <span class="doctag">@author</span> shinian</div><div class="line"> * <span class="doctag">@date</span> 2017年7月21日 上午10:25:36</div><div class="line"> * </div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnicodeDemo</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * UTF-8和GBK使用的都是Unicode字符集,但是他们的编码方式不同</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String UTF8 = <span class="string">"utf-8"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String GBK = <span class="string">"GBK"</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        String text = <span class="keyword">new</span> String(<span class="string">"马"</span>);</div><div class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            bytes = text.getBytes(UTF8);</div><div class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">byte</span> b : bytes) &#123;</div><div class="line">            System.out.println(b);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 面试题 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 字符编码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos7下MYSQL安装]]></title>
      <url>/2017/07/20/Centos7%E4%B8%8Bmysql%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="准备MYSQL"><a href="#准备MYSQL" class="headerlink" title="准备MYSQL"></a>准备MYSQL</h2><p>mysql数据源下载链接：<a href="http://pan.baidu.com/s/1cIpWaq" target="_blank" rel="external">http://pan.baidu.com/s/1cIpWaq</a> 密码：zxgo</p>
<h2 id="将mysql上传到服务器上"><a href="#将mysql上传到服务器上" class="headerlink" title="将mysql上传到服务器上"></a>将mysql上传到服务器上</h2><p>SSH工具和FTP工具推荐使用:<a href="https://www.netsarang.com/xshell_download.html" target="_blank" rel="external">XSHELL</a>和<a href="https://www.netsarang.com/products/xfp_overview.html" target="_blank" rel="external">XFTP</a></p>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-19/21202150.jpg" alt=""></p>
<a id="more"></a>
<h2 id="使用rpm命令安装mysql数据源"><a href="#使用rpm命令安装mysql数据源" class="headerlink" title="使用rpm命令安装mysql数据源"></a>使用rpm命令安装mysql数据源</h2><p>服务器版本请使用64位!</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh mysql57-community-release-el7-11.noarch.rpm</div></pre></td></tr></table></figure>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-19/13897836.jpg" alt=""></p>
<p>之后使用yum命令安装mysql</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-community-server</div></pre></td></tr></table></figure>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-20/33068189.jpg" alt=""></p>
<p>安装成功,启动mysql</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld start</div></pre></td></tr></table></figure>
<p>查看状态</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld status</div></pre></td></tr></table></figure>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-20/67500882.jpg" alt=""></p>
<p>Mysql5.7默认安装之后root是有密码的</p>
<p>为了加强安全性，MySQL5.7为root用户随机生成了一个密码，在error log中，关于error log的位置，如果安装的是RPM包，则默认是/var/log/mysqld.log。<br>只有启动过一次MySQL才可以查看临时密码</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep 'temporary password' /var/log/mysqld.log</div></pre></td></tr></table></figure>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-20/59556293.jpg" alt=""></p>
<p>复制密码登录mysql</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root -p</div></pre></td></tr></table></figure>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-20/44389458.jpg" alt=""></p>
<p>用该密码登录到服务端后，必须马上修改密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;你的密码&apos;;</div></pre></td></tr></table></figure>
<p>密码过于简单不让修改解决方案</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">set global validate_password_policy=0;</div><div class="line">set global validate_password_length=1;</div></pre></td></tr></table></figure>
<p>退出 使用新密码重新登录</p>
<p>授权其他机器登陆</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;授权登录密码&apos; WITH GRANT OPTION;</div></pre></td></tr></table></figure>
<p>使配置生效</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FLUSH  PRIVILEGES;</div></pre></td></tr></table></figure>
<p>重启mysql</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure>
<p>到此 mysql安装完毕</p>
<p>我的GITHUB:<a href="https://github.com/maruilong" target="_blank" rel="external">马睿隆</a></p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos7下JDK安装]]></title>
      <url>/2017/07/19/Centos7%E4%B8%8BJDK%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h1 id="Centos7下安装JDK"><a href="#Centos7下安装JDK" class="headerlink" title="Centos7下安装JDK"></a>Centos7下安装JDK</h1><h2 id="准备JDK"><a href="#准备JDK" class="headerlink" title="准备JDK"></a>准备JDK</h2><p>JDK下载链接：<a href="http://pan.baidu.com/s/1mhQ2KeG" target="_blank" rel="external">http://pan.baidu.com/s/1mhQ2KeG</a> 密码：7v2w</p>
<h2 id="将JDK上传到服务器上"><a href="#将JDK上传到服务器上" class="headerlink" title="将JDK上传到服务器上"></a>将JDK上传到服务器上</h2><p>SSH工具和FTP工具推荐使用:<a href="https://www.netsarang.com/xshell_download.html" target="_blank" rel="external">XSHELL</a>和<a href="https://www.netsarang.com/products/xfp_overview.html" target="_blank" rel="external">XFTP</a></p>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-19/95386738.jpg" alt=""></p>
<a id="more"></a>
<h2 id="使用rpm命令安装JDK"><a href="#使用rpm命令安装JDK" class="headerlink" title="使用rpm命令安装JDK"></a>使用rpm命令安装JDK</h2><p>服务器版本请使用64位!</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh jdk-8u77-linux-x64.rpm</div></pre></td></tr></table></figure>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-19/20838230.jpg" alt=""></p>
<p>安装之后的位置是/usr/java/jdk1.8.0_77</p>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/profile</div></pre></td></tr></table></figure>
<p>在文件末尾加上</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">JAVA_HOME=/usr/java/jdk1.8.0_77</div><div class="line">JRE_HOME=/usr/java/jdk1.8.0_77/jre</div><div class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</div><div class="line">CLASSPATH=:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</div></pre></td></tr></table></figure>
<p>刷新配置</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure>
<p>查看是否成功</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo $PATH</div><div class="line">java -version</div></pre></td></tr></table></figure>
<p><img src="http://osluooofp.bkt.clouddn.com/17-7-19/32117699.jpg" alt=""></p>
<p>到此JDK安装成功</p>
<p>我的GITHUB:<a href="https://github.com/maruilong" target="_blank" rel="external">马睿隆</a></p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> jdk </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[String阅读完成]]></title>
      <url>/2017/07/07/String%E9%98%85%E8%AF%BB%E5%AE%8C%E6%88%90/</url>
      <content type="html"><![CDATA[<h1 id="完成think-in-java-String-阅读"><a href="#完成think-in-java-String-阅读" class="headerlink" title="完成think_in_java String 阅读"></a>完成think_in_java String 阅读</h1><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><a href="https://github.com/maruilong/think_in_java-string" target="_blank" rel="external">GITGUB</a></p>
<p>完成了第13章对于String的阅读,对于在任何语言中都显得最重要,也是最基础的字符串操作来说</p>
<p>String本身无疑是很简单的,但是他是编程语言不可缺少的一部分,同时,可以灵活运用的正则给了String无限的可能性</p>
<h2 id="明天会出两个小的跟String有关的Demo"><a href="#明天会出两个小的跟String有关的Demo" class="headerlink" title="明天会出两个小的跟String有关的Demo"></a>明天会出两个小的跟String有关的Demo</h2><a id="more"></a>
<h3 id="1-一个小的爬虫Demo-在网上爬取你想要的数据"><a href="#1-一个小的爬虫Demo-在网上爬取你想要的数据" class="headerlink" title="1:一个小的爬虫Demo,在网上爬取你想要的数据"></a><a href="https://github.com/maruilong/splitDemo.git" target="_blank" rel="external">1:一个小的爬虫Demo,在网上爬取你想要的数据</a></h3><h3 id="2-一个可以通过关键字-在你的整个目录中查找文件的工具-显示具体文件名称和行号"><a href="#2-一个可以通过关键字-在你的整个目录中查找文件的工具-显示具体文件名称和行号" class="headerlink" title="2:一个可以通过关键字,在你的整个目录中查找文件的工具(显示具体文件名称和行号)"></a><a href="https://github.com/maruilong/searchFile" target="_blank" rel="external">2:一个可以通过关键字,在你的整个目录中查找文件的工具(显示具体文件名称和行号)</a></h3><h1 id="明天或者后天正式开始第14章-类型信息的阅读"><a href="#明天或者后天正式开始第14章-类型信息的阅读" class="headerlink" title="明天或者后天正式开始第14章 类型信息的阅读"></a>明天或者后天正式开始第14章 类型信息的阅读</h1>]]></content>
      
        <categories>
            
            <category> java编程思想 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java编程思想 </tag>
            
            <tag> String </tag>
            
        </tags>
        
    </entry>
    
  
  
    
  
</search>
